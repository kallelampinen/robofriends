{"version":3,"sources":["components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/errorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","username","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"0NAoBeA,EAhBF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,GAGlC,OAEA,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,mBACf,gCACI,6BAAKH,IACL,4BAAIC,IACJ,4BAAIC,WC6BDK,EArCI,SAAC,GAAc,IAAbC,EAAY,EAAZA,OASjB,OAEE,8BAEMA,EAAOC,KAAI,SAACC,EAAMC,GAEhB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdH,KAAMQ,EAAOG,GAAGX,KAChBC,MAAOO,EAAOG,GAAGV,MACjBC,SAAUM,EAAOG,GAAGT,UAJdS,SCPPC,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SAEI,uBAAOA,UAAU,+BAA+BU,KAAK,SACrDC,YAAY,gBACZC,SAAUH,OCCPI,G,MATA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,uDAEJG,KAAKX,MAAMK,a,GAhBCQ,aCoEZC,E,kDA1DX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAQ,CAELjB,OAAQ,GACR2B,YAAa,IANX,E,qDAUd,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAU1C,WAAU,IAAD,EAEyBb,KAAKJ,MAA5BjB,EAFF,EAEEA,OAAQ2B,EAFV,EAEUA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GAEjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAsB,IAAlBtC,EAAOwC,OAEA,yCAIH,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,e,GA5CrBZ,a,YCHlBkB,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.8a77ff44.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({name, email, username, id}) =>{\r\n    \r\n\r\n    return(\r\n       \r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='' src={`https://robohash.org/${id}?size=200x200`}></img>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            <p>{username}</p>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\n\r\n\r\n\r\n  const CardList = ({robots}) => {\r\n\r\n\r\n    // Manual error to display functionality of ErrorBoundry compoonent\r\n    \r\n    // if(true) {\r\n    //   throw new Error ('nooo');    \r\n    // }\r\n\r\n    return(\r\n\r\n      <div>\r\n{\r\n            robots.map((user, i) => {\r\n\r\n              return(\r\n                <Card \r\n                key= {i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} \r\n                username={robots[i].username} \r\n                />\r\n              \r\n\r\n          );\r\n          })\r\n\r\n}\r\n     \r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\r\n    return(\r\n        <div className='pa2'>\r\n\r\n            <input className='pa3 b-green bg-lightest-blue' type='search'\r\n            placeholder='Search robots'\r\n            onChange={searchChange}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>Opps that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport '../components/Scroll';\r\nimport Scroll from '../components/Scroll';\r\nimport '../components/errorBoundry'\r\nimport ErrorBoundry from '../components/errorBoundry';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n        \r\n                robots: [],\r\n                searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>  response.json())\r\n        .then(users => this.setState({robots: users}));\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n  \r\n   \r\n    render() {\r\n\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        if (robots.length === 0){\r\n\r\n            return <h1>Loading</h1>\r\n        } else {\r\n\r\n            return (\r\n                <div className='tc'>\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                   <ErrorBoundry>\r\n                     <CardList robots={filteredRobots}/>\r\n                  </ErrorBoundry>\r\n                </Scroll>\r\n                \r\n                </div>\r\n            );\r\n\r\n            \r\n        }\r\n\r\n    \r\n    }\r\n\r\n\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\nimport './index.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}